// Generated by BUCKLESCRIPT VERSION 5.0.1, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function make(name, iterations) {
  return {
          iterations: iterations,
          name: name
        };
}

var State = /* module */[/* make */make];

function ofType(actionType) {
  return /* record */[/* kind */actionType];
}

var Action = /* module */[/* ofType */ofType];

var initialState = {
  iterations: 0,
  name: "world"
};

var mutatedState = /* record */[/* contents */initialState];

function unref(refState) {
  return refState[0];
}

function updateState(previous, action) {
  mutatedState[0] = {
    iterations: previous.iterations + 1 | 0,
    name: "updates"
  };
  return mutatedState[0];
}

var refRoot = /* record */[/* contents */undefined];

var render = (
  (state, root) => root`<div onclick=${onClicked}>
    Hello, ${state.name} ${state.iterations}
  </div>`
);

function dispatch(action) {
  var root = refRoot[0];
  var state = updateState(mutatedState[0], action);
  if (root !== undefined) {
    Curry._2(render, state, root);
  }
  return /* () */0;
}

function onClicked(param) {
  return dispatch(/* record */[/* kind : Update */0]);
}

function main(param) {
  var renderer = hyperHTML.bind(document.getElementById("root"));
  refRoot[0] = renderer;
  Curry._2(render, initialState, renderer);
  return /* () */0;
}

window.onload=main
;

exports.State = State;
exports.Action = Action;
exports.initialState = initialState;
exports.mutatedState = mutatedState;
exports.unref = unref;
exports.updateState = updateState;
exports.refRoot = refRoot;
exports.render = render;
exports.dispatch = dispatch;
exports.onClicked = onClicked;
exports.main = main;
/* render Not a pure module */
